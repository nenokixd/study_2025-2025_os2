---
# Preamble

## Author
author:
  name: Чекмарев Александр Дмитриевич | группа НПИбд 03-24
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
   
## Title
title: "Лабораторная работа №4"
subtitle: "Работа с программными пакетами"
license: "CC BY"
## Generic options
lang: ru-RU
number-sections: true
toc: true
toc-title: "Содержание"
toc-depth: 2
## Crossref customization
crossref:
  lof-title: "Список иллюстраций"
  lot-title: "Список таблиц"
  lol-title: "Листинги"
## Bibliography
bibliography:
  - bib/cite.bib
csl: _resources/csl/gost-r-7-0-5-2008-numeric.csl
## Formats
format:
### Pdf output format
  pdf:
    toc: true
    number-sections: true
    colorlinks: false
    toc-depth: 2
    lof: true # List of figures
    lot: true # List of tables
#### Document
    documentclass: scrreprt
    papersize: a4
    fontsize: 12pt
    linestretch: 1.5
#### Language
    babel-lang: russian
    babel-otherlangs: english
#### Biblatex
    cite-method: biblatex
    biblio-style: gost-numeric
    biblatexoptions:
      - backend=biber
      - langhook=extras
      - autolang=other*
#### Misc options
    csquotes: true
    indent: true
    header-includes: |
      \usepackage{indentfirst}
      \usepackage{float}
      \floatplacement{figure}{H}
      \usepackage[math,RM={Scale=0.94},SS={Scale=0.94},SScon={Scale=0.94},TT={Scale=MatchLowercase,FakeStretch=0.9},DefaultFeatures={Ligatures=Common}]{plex-otf}
### Docx output format
  docx:
    toc: true
    number-sections: true
    toc-depth: 2
---

# Цель работы

Получить навыки работы с репозиториями и менеджерами пакетов.

# Выполнение лабораторной работы

## Работа с репозиториями

В консоли перейдем в режим работы суперпользователя

![Переход в root](image/Screenshot_1.png)

Перейдем в каталог /etc/yum.repos.d и изучим содержание каталога и файлов репозиториев:

```
cd /etc/yum.repos.d
ls
cat название_репозитория.repo
```

![Переход в каталог и просмотр содержимого в нем](image/Screenshot_2.png)

На примере просмотрим rocky-devel.repo и rocky.repo

![Просмотр файлов репозитория rocky.repo](image/Screenshot_3.png)

![Просмотр файлов репозитория rocky-devel.repo](image/Screenshot_3.1.png)

Выведем на экран список репозиториев: **dnf repolist** 

![Список репозиториев](image/Screenshot_4.png)

Выведем на экран список пакетов, в названии или описании которых есть слово user: **dnf search user**

![Фрагмент списка пакетов со словом user](image/Screenshot_5.png)

Установим nmap, предварительно изучив информацию по имеющимся пакетам:

Найдем nmap: **dnf search nmap**

![Проверка существования nmap](image/Screenshot_6.png)

Просмотрим информацию о нем: **dnf info nmap**

![Фрагмент просмотра информации nmap](image/Screenshot_7.png)

Установим nmap: **dnf install nmap**

![Фрагмент установки nmap](image/Screenshot_8.png)

Установим другие пакеты с началом nmap: **dnf install nmap\* **

![Попытка установить другие пакеты с началом nmap](image/Screenshot_9.png)

Как видим, другие пакеты уже установлены

Удалим nmap:

```
dnf remove nmap
dnf remove nmap\*
```

![Фрагмент удаления nmap](image/Screenshot_10.png)

![Фрагмент удаления nmap-ncat](image/Screenshot_11.png)


Получим список имеющихся групп пакетов, затем установим группу пакетов RPM Development Tools

Сначала просмотрим список: 

```
dnf groups list
LANG=C dnf groups list
```

![Фрагмент списка](image/Screenshot_12.png)

![Фрагмент списка на eng](image/Screenshot_13.png)

Узнаем о информацию о пакете: **dnf groups info "RPM Development Tools"**

![Информация о пакете](image/Screenshot_14.png)

Установим "RPM Development Tools": **dnf groupinstall "RPM Development Tools"**

![Фрагмент установки RPM Development Tools](image/Screenshot_15.png)

Для удаления группы пакетов RPM Development Tools можно воспользоваться командой **dnf groupremove "RPM Development Tools"**

![Фрагмент удаления RPM Development Tools](image/Screenshot_16.png)

Посмотрим историю использования команды dnf: **dnf history** 

![Просмотр истории команды dnf](image/Screenshot_17.png)

Отменим последнее, например 14 по счёту, действие: **dnf history undo 14**

![Отмена 14-го действия - удаление RPM Development Tools и обратная установка](image/Screenshot_18.png)


## Использование rpm

Предположим, что требуется установить текстовый браузер lynx из rpm-пакета.
Скачаем rpm-пакет lynx:

Посмотрим информацию о пакете: **dnf list lynx**

![Просмотр информации о пакете lynx](image/Screenshot_19.png)

Скачаем пакет lynx: **dnf install lynx --downloadonly**

![Фрагмент установки lynx](image/Screenshot_20.png)

Найдем каталог, в который был помещён пакет после загрузки: **find /var/cache/dnf/ -name lynx* **  
Перейдем в этот каталог

![Нахождение каталога и переход в него](image/Screenshot_21.png)

Установим rpm-пакет: **rpm -Uhv lynx-<версия>.rpm**
Определим расположение исполняемого файла: **which lynx**
Используя rpm, определим по имени файла, к какому пакету принадлежит lynx: **rpm -qf $(which lynx)**

![Установка rpm-пакета с определением расположения и к какому пакету он принаджлежит](image/Screenshot_22.png)

Получим дополнительную информацию о содержимом пакета, введя: **rpm -qi lynx**

![Просмотр доп.информации о содержимом пакета](image/Screenshot_23.png)

Получим список всех файлов в пакете, используя: **rpm -ql lynx**

![Просмотр списка всех файлов в пакете](image/Screenshot_24.png)

Выведем перечень файлов с документацией пакета, введя: **rpm -qd lynx**

![Просмотр файлов с документацией пакета](image/Screenshot_25.png)

Посмотрим файлы документации, применив команду man lynx.

![Просмотр файлов документации](image/Screenshot_26.png)

Выведем на экран перечень и месторасположение конфигурационных файлов пакета: **rpm -qc lynx**
Выведем на экран расположение и содержание скриптов, выполняемых при установке пакета: **rpm -q --scripts lynx**

![Просмотр конфигурационных файлов и скриптов](image/Screenshot_37.png)


В отдельном терминале под своей учётной записью запустим текстовый браузер lynx, чтобы проверить корректность установки пакета.

![Фрагмент Lynx](image/Screenshot_39.png)

Вернемся в терминал с учётной записью root и удалим пакет
Удалим lynx:**rpm -e lynx**
Просмотрим содержимое 

![Удаление lynx и просмотр содержимого](image/Screenshot_38.png)

Предположим, что требуется из rpm-пакетов установить dnsmasq (DNS-, DHCP- и TFTPсервер).

Установим пакет dnsmasq:

```
dnf list dnsmasq
dnf install dnsmasq
```
![Просмотр информации о пакете и попытка установки](image/Screenshot_28.png)

Как видим, все уже установлено 

Определим расположение исполняемого файла: **which dnsmasq**
Определите по имени файла, к какому пакету принадлежит dnsmasq: **rpm -qf $(which dnsmasq)**

![Просмотр расположения исп.файла и определение к какому пакету он принадлежит](image/Screenshot_29.png)

Получим дополнительную информацию о содержимом пакета: **rpm -qi dnsmasq**

![Фрагмент просмотра доп.информации о содержимом пакета](image/Screenshot_30.png)

Получим список всех файлов в пакете: **rpm -ql dnsmasq**

![Фрагмент просмотра списка всех файлов пакета](image/Screenshot_31.png)

Выведем перечень файлов с документацией пакета: **rpm -qd dnsmasq**

![Просмотр файлов с документацией пакета](image/Screenshot_32.png)

Посмотрим файлы документации, применив команду **man dnsmasq**

![Фрагмент просмотра файлов документации](image/Screenshot_33.png)

Выведем на экран перечень и месторасположение конфигурационных файлов пакета: **rpm -qc dnsmasq**

![Просмотр конфигурационных файлов пакета](image/Screenshot_34.png)

Выведем на экран расположение и содержание скриптов, выполняемых при установке пакета: **rpm -q --scripts dnsmasq**

![Просмотр скриптов пакета](image/Screenshot_35.png)

Вернемся в терминал с учётной записью root и удалим пакет: **rpm -e dnsmask**

![Демонстрация команды удаления пакета](image/Screenshot_36.png)


# Контрольные вопросы

1. Какая команда позволяет вам искать пакет rpm, содержащий файл useradd?

**dnf provides */useradd** или **dnf whatprovides */useradd**

![Фрагмента вывода dnf provides */useradd](image/Screenshot_40.png)

2. Какие команды вам нужно использовать, чтобы показать имя группы dnf, которая содержит инструменты безопасности и показывает, что находится в этой группе?

Ищем группу с помощью: **dnf group list | grep -i security**
Затем смотрим содержимое: **dnf group info "Security Tools"**

3. Какая команда позволяет вам установить rpm, который вы загрузили из Интернета и который не находится в репозиториях?

С помощью команды **sudo rpm -ivh package.rpm**, либо предпочтительнее через dnf **sudo dnf install ./package.rpm**

4. Вы хотите убедиться, что пакет rpm, который вы загрузили, не содержит никакого опасного кода сценария. Какая команда позволяет это сделать?

Данная команда **rpm -qp --scripts package.rpm** позволяет просмотреть скрипты внутри


5. Какая команда показывает всю документацию в rpm?

**rpm -qd (название файла)** Без скобок


6. Какая команда показывает, какому пакету rpm принадлежит файл?

**rpm -qf /path/to/file**


# Выводы

Приобретены навыки работы с репозиториями и менеджерами пакетов


# Список литературы{.unnumbered}

::: {#refs}
:::
